{"ast":null,"code":"import axiosInstance from './axiosInstance';\nimport { store } from '../app/store';\nimport { refreshToken } from '../features/authSlice';\n\n// Set up an interceptor for requests\naxiosInstance.interceptors.request.use(config => {\n  const token = store.getState().auth.accessToken;\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Set up an interceptor for response\naxiosInstance.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      await store.dispatch(refreshToken());\n      const newToken = store.getState().auth.accessToken;\n      if (newToken) {\n        axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n        return axiosInstance(originalRequest);\n      }\n    } catch (refreshError) {\n      console.error('Failed to refresh token:', refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport function setupAxiosInterceptors() {\n  // Эта функция нужна только для инициализации перехватчиков\n  // Она не возвращает ничего\n}","map":{"version":3,"names":["axiosInstance","store","refreshToken","interceptors","request","use","config","token","getState","auth","accessToken","headers","error","Promise","reject","response","_error$response","originalRequest","status","_retry","dispatch","newToken","defaults","common","refreshError","console","setupAxiosInterceptors"],"sources":["D:/pycharm_projects/wander-wave-project/frontend/src/api/axiosConfig.ts"],"sourcesContent":["import axiosInstance from './axiosInstance';\r\nimport { store } from '../app/store';\r\nimport { refreshToken } from '../features/authSlice';\r\n\r\n// Set up an interceptor for requests\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = store.getState().auth.accessToken;\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Set up an interceptor for response\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      try {\r\n        await store.dispatch(refreshToken());\r\n        const newToken = store.getState().auth.accessToken;\r\n        if (newToken) {\r\n          axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\r\n          return axiosInstance(originalRequest);\r\n        }\r\n      } catch (refreshError) {\r\n        console.error('Failed to refresh token:', refreshError);\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport function setupAxiosInterceptors() {\r\n  // Эта функция нужна только для инициализации перехватчиков\r\n  // Она не возвращает ничего\r\n}"],"mappings":"AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,SAASC,KAAK,QAAQ,cAAc;AACpC,SAASC,YAAY,QAAQ,uBAAuB;;AAEpD;AACAF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGN,KAAK,CAACO,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACC,WAAW;EAC/C,IAAIH,KAAK,EAAE;IACTD,MAAM,CAACK,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUJ,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAZ,aAAa,CAACG,YAAY,CAACY,QAAQ,CAACV,GAAG,CACpCU,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACf,MAAMC,eAAe,GAAGL,KAAK,CAACN,MAAM;EACpC,IAAI,EAAAU,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAC7B,IAAI;MACF,MAAMlB,KAAK,CAACmB,QAAQ,CAAClB,YAAY,CAAC,CAAC,CAAC;MACpC,MAAMmB,QAAQ,GAAGpB,KAAK,CAACO,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACC,WAAW;MAClD,IAAIW,QAAQ,EAAE;QACZrB,aAAa,CAACsB,QAAQ,CAACX,OAAO,CAACY,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUF,QAAQ,EAAE;QAC7E,OAAOrB,aAAa,CAACiB,eAAe,CAAC;MACvC;IACF,CAAC,CAAC,OAAOO,YAAY,EAAE;MACrBC,OAAO,CAACb,KAAK,CAAC,0BAA0B,EAAEY,YAAY,CAAC;IACzD;EACF;EACA,OAAOX,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,SAASc,sBAAsBA,CAAA,EAAG;EACvC;EACA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}