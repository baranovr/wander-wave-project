{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rusip\\\\wander-wave-project\\\\frontend\\\\src\\\\components\\\\Notifications\\\\Notifications.tsx\",\n  _s = $RefreshSig$();\nimport './Notifications.scss';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { deleteAllNotifications, deleteNotification, fetchAllNotifications, markAllNotificationsAsRead, markNotificationAsRead } from '../../features/notificationsSlice';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Notifications = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const {\n    notifications\n  } = useAppSelector(state => state.notifications);\n  const isAuthenticated = useAppSelector(state => state.auth.isAuthenticated);\n  const [visibleNotifications, setVisibleNotifications] = useState(false);\n  useEffect(() => {\n    dispatch(fetchAllNotifications());\n  }, [notifications, dispatch]);\n  const handleMarkAllAsRead = () => {\n    dispatch(markAllNotificationsAsRead());\n  };\n  const handleMarkAsRead = (id, text) => {\n    dispatch(markNotificationAsRead({\n      text,\n      id\n    }));\n  };\n  const handleDelete = (id, text) => {\n    dispatch(deleteNotification({\n      id,\n      text\n    }));\n  };\n  const handleDeleteAll = () => {\n    dispatch(deleteAllNotifications());\n  };\n  const filteredNotification = useMemo(() => {\n    return notifications.sort((a, b) => +b.created_at.slice(0, 19).replaceAll('-', '').replaceAll(':', '').replace('T', '') - +a.created_at.slice(0, 19).replaceAll('-', '').replaceAll(':', '').replace('T', ''));\n  }, [notifications]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification__trigger\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"notification__bell\",\n        disabled: !isAuthenticated,\n        onClick: () => setVisibleNotifications(!visibleNotifications)\n        //onBlur={() => setVisibleNotifications(false)}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), visibleNotifications && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification__menu\",\n      id: \"dropdown-menu\",\n      role: \"menu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification__buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"notification__button\",\n            onClick: handleMarkAllAsRead,\n            children: [\"Read all\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification__span notification__span--done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"notification__button\",\n            onClick: handleDeleteAll,\n            children: [\"Clear all\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification__span notification__span--done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), !notifications.length && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"notification__message\",\n          children: \"You have no notifications yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), !!notifications.length && filteredNotification.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames('notification__item', {\n            'notification__item--subscribe': notification.text.includes('subscribed'),\n            'notification__item--post': notification.text.includes('published'),\n            'notification__item--like': notification.text.includes('liked'),\n            'notification__item--comment': notification.text.includes('commented'),\n            'notification__item--read': notification.is_read\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: classNames('notification__span', {\n              'notification__span--subscribe': notification.text.includes('subscribed'),\n              'notification__span--post': notification.text.includes('published'),\n              'notification__span--like': notification.text.includes('liked'),\n              'notification__span--comment': notification.text.includes('commented')\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification__text\",\n            children: notification.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"notification__icon notification__icon--eye\",\n            onClick: () => handleMarkAsRead(notification.id, notification.text)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"notification__icon notification__icon--close\",\n            onClick: () => handleDelete(notification.id, notification.text)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"nQeGwlE2hqSbKhLF572/NUNp5A4=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector];\n});\n_c = Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["useEffect","useMemo","useState","useAppDispatch","useAppSelector","deleteAllNotifications","deleteNotification","fetchAllNotifications","markAllNotificationsAsRead","markNotificationAsRead","classNames","jsxDEV","_jsxDEV","Notifications","_s","dispatch","notifications","state","isAuthenticated","auth","visibleNotifications","setVisibleNotifications","handleMarkAllAsRead","handleMarkAsRead","id","text","handleDelete","handleDeleteAll","filteredNotification","sort","a","b","created_at","slice","replaceAll","replace","className","children","type","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","role","length","map","notification","includes","is_read","_c","$RefreshReg$"],"sources":["C:/Users/rusip/wander-wave-project/frontend/src/components/Notifications/Notifications.tsx"],"sourcesContent":["import './Notifications.scss';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport {\r\n  deleteAllNotifications,\r\n  deleteNotification,\r\n  fetchAllNotifications,\r\n  markAllNotificationsAsRead,\r\n  markNotificationAsRead,\r\n} from '../../features/notificationsSlice';\r\nimport classNames from 'classnames';\r\n\r\nexport const Notifications = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { notifications } = useAppSelector(\r\n    state => state.notifications,\r\n  );\r\n  const isAuthenticated = useAppSelector(state => state.auth.isAuthenticated);\r\n  const [visibleNotifications, setVisibleNotifications] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllNotifications());\r\n  }, [notifications, dispatch]);\r\n\r\n  const handleMarkAllAsRead = () => {\r\n    dispatch(markAllNotificationsAsRead());\r\n  };\r\n\r\n  const handleMarkAsRead = (id: number, text: string) => {\r\n    dispatch(markNotificationAsRead({ text, id }));\r\n  };\r\n\r\n  const handleDelete = (id: number, text: string) => {\r\n    dispatch(deleteNotification({ id, text }));\r\n  };\r\n\r\n  const handleDeleteAll = () => {\r\n    dispatch(deleteAllNotifications());\r\n  };\r\n\r\n  const filteredNotification = useMemo(() => {\r\n    return notifications.sort(\r\n      (a, b) =>\r\n        +b.created_at\r\n          .slice(0, 19)\r\n          .replaceAll('-', '')\r\n          .replaceAll(':', '')\r\n          .replace('T', '') -\r\n        +a.created_at\r\n          .slice(0, 19)\r\n          .replaceAll('-', '')\r\n          .replaceAll(':', '')\r\n          .replace('T', ''),\r\n    );\r\n  }, [notifications]);\r\n\r\n  return (\r\n    <div className=\"notification\">\r\n      <div className=\"notification__trigger\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"notification__bell\"\r\n          disabled={!isAuthenticated}\r\n          onClick={() => setVisibleNotifications(!visibleNotifications)}\r\n          //onBlur={() => setVisibleNotifications(false)}\r\n        />\r\n      </div>\r\n\r\n      {visibleNotifications && (\r\n        <div className=\"notification__menu\" id=\"dropdown-menu\" role=\"menu\">\r\n          <div className=\"notification__content\">\r\n            <div className=\"notification__buttons\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"notification__button\"\r\n                onClick={handleMarkAllAsRead}\r\n              >\r\n                Read all\r\n                <span className=\"notification__span notification__span--done\" />\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"notification__button\"\r\n                onClick={handleDeleteAll}\r\n              >\r\n                Clear all\r\n                <span className=\"notification__span notification__span--done\" />\r\n              </button>\r\n            </div>\r\n            {!notifications.length && (\r\n              <p className=\"notification__message\">\r\n                You have no notifications yet\r\n              </p>\r\n            )}\r\n            {!!notifications.length &&\r\n              filteredNotification.map(notification => (\r\n                <div\r\n                  className={classNames('notification__item', {\r\n                    'notification__item--subscribe':\r\n                      notification.text.includes('subscribed'),\r\n                    'notification__item--post':\r\n                      notification.text.includes('published'),\r\n                    'notification__item--like':\r\n                      notification.text.includes('liked'),\r\n                    'notification__item--comment':\r\n                      notification.text.includes('commented'),\r\n                    'notification__item--read': notification.is_read,\r\n                  })}\r\n                >\r\n                  <span\r\n                    className={classNames('notification__span', {\r\n                      'notification__span--subscribe':\r\n                        notification.text.includes('subscribed'),\r\n                      'notification__span--post':\r\n                        notification.text.includes('published'),\r\n                      'notification__span--like':\r\n                        notification.text.includes('liked'),\r\n                      'notification__span--comment':\r\n                        notification.text.includes('commented'),\r\n                    })}\r\n                  />\r\n                  <div className=\"notification__text\">{notification.text}</div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"notification__icon notification__icon--eye\"\r\n                    onClick={() =>\r\n                      handleMarkAsRead(notification.id, notification.text)\r\n                    }\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"notification__icon notification__icon--close\"\r\n                    onClick={() =>\r\n                      handleDelete(notification.id, notification.text)\r\n                    }\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}