{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport postsSlice from '../features/postsSlice';\nimport postDetailsSlice from '../features/postDetailsSlice';\nimport authSlice from '../features/authSlice';\nimport myProfileSlice from '../features/myProfileSlice';\nimport subscriptionSlice from '../features/subscriptionSlice';\nimport notificationsSlice from '../features/notificationsSlice';\nimport authorProfileSlice from '../features/authorProfileSlice';\nexport const store = configureStore({\n  reducer: {\n    author: authorProfileSlice,\n    myProfile: myProfileSlice,\n    postDetails: postDetailsSlice,\n    posts: postsSlice,\n    auth: authSlice,\n    subscription: subscriptionSlice,\n    notifications: notificationsSlice\n  }\n});\n\n/* eslint-disable @typescript-eslint/indent */\n\n/* eslint-enable @typescript-eslint/indent */\n\n// // Infer the `RootState` and `AppDispatch` types from the store itself\n// export type RootState = ReturnType<typeof store.getState>\n// // Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\n// export type AppDispatch = typeof store.dispatch","map":{"version":3,"names":["configureStore","postsSlice","postDetailsSlice","authSlice","myProfileSlice","subscriptionSlice","notificationsSlice","authorProfileSlice","store","reducer","author","myProfile","postDetails","posts","auth","subscription","notifications"],"sources":["D:/wander-wave-project/frontend/src/app/store.ts"],"sourcesContent":["import { Action, configureStore, ThunkAction } from '@reduxjs/toolkit';\r\n\r\nimport postsSlice from '../features/postsSlice';\r\nimport postDetailsSlice from '../features/postDetailsSlice';\r\nimport authSlice from '../features/authSlice';\r\nimport myProfileSlice from '../features/myProfileSlice';\r\nimport subscriptionSlice from '../features/subscriptionSlice';\r\nimport notificationsSlice from '../features/notificationsSlice';\r\nimport authorProfileSlice from '../features/authorProfileSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    author: authorProfileSlice,\r\n    myProfile: myProfileSlice,\r\n    postDetails: postDetailsSlice,\r\n    posts: postsSlice,\r\n    auth: authSlice,\r\n    subscription: subscriptionSlice,\r\n    notifications: notificationsSlice,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n/* eslint-disable @typescript-eslint/indent */\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n/* eslint-enable @typescript-eslint/indent */\r\n\r\n// // Infer the `RootState` and `AppDispatch` types from the store itself\r\n// export type RootState = ReturnType<typeof store.getState>\r\n// // Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\n// export type AppDispatch = typeof store.dispatch\r\n"],"mappings":"AAAA,SAAiBA,cAAc,QAAqB,kBAAkB;AAEtE,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,iBAAiB,MAAM,+BAA+B;AAC7D,OAAOC,kBAAkB,MAAM,gCAAgC;AAC/D,OAAOC,kBAAkB,MAAM,gCAAgC;AAE/D,OAAO,MAAMC,KAAK,GAAGR,cAAc,CAAC;EAClCS,OAAO,EAAE;IACPC,MAAM,EAAEH,kBAAkB;IAC1BI,SAAS,EAAEP,cAAc;IACzBQ,WAAW,EAAEV,gBAAgB;IAC7BW,KAAK,EAAEZ,UAAU;IACjBa,IAAI,EAAEX,SAAS;IACfY,YAAY,EAAEV,iBAAiB;IAC/BW,aAAa,EAAEV;EACjB;AACF,CAAC,CAAC;;AAIF;;AAOA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}