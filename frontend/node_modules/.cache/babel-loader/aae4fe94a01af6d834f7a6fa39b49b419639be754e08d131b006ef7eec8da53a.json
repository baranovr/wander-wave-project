{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getPosts } from '../api/posts';\nimport axios from 'axios';\nconst initialState = {\n  posts: [],\n  loading: false,\n  error: false,\n  createLoading: false,\n  createError: false\n};\nexport const init = createAsyncThunk('posts/fetch', getPosts);\nexport const createPost = createAsyncThunk('posts/createPost', async formData => {\n  const response = await axios.post('/api/posts/', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return response.data;\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(init.pending, state => {\n      state.loading = true;\n      state.error = false;\n    });\n    builder.addCase(init.rejected, state => {\n      state.loading = false;\n      state.error = true;\n    });\n    builder.addCase(init.fulfilled, (state, action) => {\n      state.loading = false;\n      state.posts = action.payload;\n    });\n    builder.addCase(createPost.pending, state => {\n      state.createLoading = true;\n      state.createError = false;\n    });\n    builder.addCase(createPost.rejected, state => {\n      state.createLoading = false;\n      state.createError = true;\n    });\n    builder.addCase(createPost.fulfilled, (state, action) => {\n      state.createLoading = false;\n      state.posts.push(action.payload);\n    });\n  }\n});\nexport default postsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getPosts","axios","initialState","posts","loading","error","createLoading","createError","init","createPost","formData","response","post","headers","data","postsSlice","name","reducers","extraReducers","builder","addCase","pending","state","rejected","fulfilled","action","payload","push","reducer"],"sources":["D:/pycharm_projects/wander-wave-project/frontend/src/features/postsSlice.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { Post } from '../types/Post';\r\nimport { getPosts } from '../api/posts';\r\nimport axios from 'axios';\r\nimport { PostData } from '../types/PostDetails';\r\n\r\ntype PostsState = {\r\n  posts: Post[];\r\n  loading: boolean;\r\n  error: boolean;\r\n  createLoading: boolean;\r\n  createError: boolean;\r\n};\r\n\r\nconst initialState: PostsState = {\r\n  posts: [],\r\n  loading: false,\r\n  error: false,\r\n  createLoading: false,\r\n  createError: false,\r\n};\r\n\r\nexport const init = createAsyncThunk('posts/fetch', getPosts);\r\n\r\nexport const createPost = createAsyncThunk(\r\n  'posts/createPost',\r\n  async (formData: PostData) => {\r\n    const response = await axios.post('/api/posts/', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n);\r\n\r\nconst postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers(builder) {\r\n    builder.addCase(init.pending, state => {\r\n      state.loading = true;\r\n      state.error = false;\r\n    });\r\n\r\n    builder.addCase(init.rejected, state => {\r\n      state.loading = false;\r\n      state.error = true;\r\n    });\r\n\r\n    builder.addCase(init.fulfilled, (state, action) => {\r\n      state.loading = false;\r\n      state.posts = action.payload;\r\n    });\r\n\r\n    builder.addCase(createPost.pending, state => {\r\n      state.createLoading = true;\r\n      state.createError = false;\r\n    });\r\n\r\n    builder.addCase(createPost.rejected, state => {\r\n      state.createLoading = false;\r\n      state.createError = true;\r\n    });\r\n\r\n    builder.addCase(createPost.fulfilled, (state, action) => {\r\n      state.createLoading = false;\r\n      state.posts.push(action.payload);\r\n    });\r\n  },\r\n});\r\n\r\nexport default postsSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,SAASC,QAAQ,QAAQ,cAAc;AACvC,OAAOC,KAAK,MAAM,OAAO;AAWzB,MAAMC,YAAwB,GAAG;EAC/BC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,KAAK;EACZC,aAAa,EAAE,KAAK;EACpBC,WAAW,EAAE;AACf,CAAC;AAED,OAAO,MAAMC,IAAI,GAAGV,gBAAgB,CAAC,aAAa,EAAEE,QAAQ,CAAC;AAE7D,OAAO,MAAMS,UAAU,GAAGX,gBAAgB,CACxC,kBAAkB,EAClB,MAAOY,QAAkB,IAAK;EAC5B,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,aAAa,EAAEF,QAAQ,EAAE;IACzDG,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACF,OAAOF,QAAQ,CAACG,IAAI;AACtB,CACF,CAAC;AAED,MAAMC,UAAU,GAAGhB,WAAW,CAAC;EAC7BiB,IAAI,EAAE,OAAO;EACbd,YAAY;EACZe,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAaA,CAACC,OAAO,EAAE;IACrBA,OAAO,CAACC,OAAO,CAACZ,IAAI,CAACa,OAAO,EAAEC,KAAK,IAAI;MACrCA,KAAK,CAAClB,OAAO,GAAG,IAAI;MACpBkB,KAAK,CAACjB,KAAK,GAAG,KAAK;IACrB,CAAC,CAAC;IAEFc,OAAO,CAACC,OAAO,CAACZ,IAAI,CAACe,QAAQ,EAAED,KAAK,IAAI;MACtCA,KAAK,CAAClB,OAAO,GAAG,KAAK;MACrBkB,KAAK,CAACjB,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC;IAEFc,OAAO,CAACC,OAAO,CAACZ,IAAI,CAACgB,SAAS,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MACjDH,KAAK,CAAClB,OAAO,GAAG,KAAK;MACrBkB,KAAK,CAACnB,KAAK,GAAGsB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;IAEFP,OAAO,CAACC,OAAO,CAACX,UAAU,CAACY,OAAO,EAAEC,KAAK,IAAI;MAC3CA,KAAK,CAAChB,aAAa,GAAG,IAAI;MAC1BgB,KAAK,CAACf,WAAW,GAAG,KAAK;IAC3B,CAAC,CAAC;IAEFY,OAAO,CAACC,OAAO,CAACX,UAAU,CAACc,QAAQ,EAAED,KAAK,IAAI;MAC5CA,KAAK,CAAChB,aAAa,GAAG,KAAK;MAC3BgB,KAAK,CAACf,WAAW,GAAG,IAAI;IAC1B,CAAC,CAAC;IAEFY,OAAO,CAACC,OAAO,CAACX,UAAU,CAACe,SAAS,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MACvDH,KAAK,CAAChB,aAAa,GAAG,KAAK;MAC3BgB,KAAK,CAACnB,KAAK,CAACwB,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAeX,UAAU,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}