{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  postId: 0,\n  post: null,\n  loading: false,\n  error: false,\n  likeError: ''\n};\nexport const fetchPostDetails = createAsyncThunk('posts/fetchPostDetails', async postId => {\n  const response = await axios.get(`/api/platform/posts/${postId}`);\n  return response.data;\n});\nexport const addComment = createAsyncThunk('comments/addComment', async ({\n  text,\n  userId,\n  postId\n}) => {\n  const response = await axios.post('/api/platform/comments/', {\n    text,\n    userId,\n    postId\n  });\n  return response.data;\n});\nexport const setLike = createAsyncThunk('posts/setLike', async (postId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`/api/platform/posts/${postId}/set-like/`, null, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('access_token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue('Failed to set like');\n  }\n});\nexport const addToFavorites = createAsyncThunk('posts/addToFavorites', async (postId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`/api/platform/posts/${postId}/add-to-favorites/`, null, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('access_token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue('Failed to add to favorites');\n  }\n});\nconst postDetailsSlice = createSlice({\n  name: 'comments',\n  initialState,\n  reducers: {\n    set: (state, action) => {\n      state.postId = action.payload;\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(fetchPostDetails.pending, state => {\n      state.loading = true;\n      state.error = false;\n    });\n    builder.addCase(fetchPostDetails.rejected, state => {\n      state.error = true;\n      state.loading = false;\n    });\n    builder.addCase(fetchPostDetails.fulfilled, (state, action) => {\n      state.loading = false;\n      state.post = action.payload;\n    });\n    builder.addCase(addComment.fulfilled, (state, action) => {\n      if (state.post && state.post.comments) {\n        state.post.comments.push(action.payload);\n      }\n    });\n    builder.addCase(setLike.fulfilled, (state, action) => {\n      if (state.post) {\n        state.post.likes_count = action.payload.likes_count;\n      }\n    });\n    builder.addCase(setLike.rejected, (state, action) => {\n      state.likeError = action.payload;\n    });\n  }\n});\nexport default postDetailsSlice.reducer;\nexport const {\n  actions\n} = postDetailsSlice;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","postId","post","loading","error","likeError","fetchPostDetails","response","get","data","addComment","text","userId","setLike","rejectWithValue","headers","Authorization","localStorage","getItem","addToFavorites","postDetailsSlice","name","reducers","set","state","action","payload","extraReducers","builder","addCase","pending","rejected","fulfilled","comments","push","likes_count","reducer","actions"],"sources":["D:/pycharm_projects/wander-wave-project/frontend/src/features/postDetailsSlice.ts"],"sourcesContent":["import { PayloadAction, createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { PostDetails } from '../types/PostDetails';\r\nimport { Comment, CommentData } from '../types/Comments';\r\nimport axios from 'axios';\r\n\r\ntype DetailsState = {\r\n  postId: number;\r\n  post: PostDetails | null;\r\n  loading: boolean;\r\n  error: boolean;\r\n  likeError: string;\r\n};\r\n\r\nconst initialState: DetailsState = {\r\n  postId: 0,\r\n  post: null,\r\n  loading: false,\r\n  error: false,\r\n  likeError: '',\r\n};\r\n\r\nexport const fetchPostDetails = createAsyncThunk(\r\n  'posts/fetchPostDetails',\r\n  async (postId: string) => {\r\n    const response = await axios.get(`/api/platform/posts/${postId}`);\r\n    return response.data;\r\n  },\r\n);\r\n\r\nexport const addComment = createAsyncThunk(\r\n  'comments/addComment',\r\n  async ({\r\n    text,\r\n    userId,\r\n    postId,\r\n  }: {\r\n    text: string;\r\n    userId: number;\r\n    postId: number;\r\n  }) => {\r\n    const response = await axios.post('/api/platform/comments/', {\r\n      text,\r\n      userId,\r\n      postId,\r\n    });\r\n    return response.data;\r\n  },\r\n);\r\n\r\nexport const setLike = createAsyncThunk(\r\n  'posts/setLike',\r\n  async (postId: number, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `/api/platform/posts/${postId}/set-like/`,\r\n        null,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`,\r\n          },\r\n        },\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue('Failed to set like');\r\n    }\r\n  },\r\n);\r\n\r\nexport const addToFavorites = createAsyncThunk(\r\n  'posts/addToFavorites',\r\n  async (postId: number, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `/api/platform/posts/${postId}/add-to-favorites/`,\r\n        null,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`,\r\n          },\r\n        },\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue('Failed to add to favorites');\r\n    }\r\n  },\r\n);\r\n\r\nconst postDetailsSlice = createSlice({\r\n  name: 'comments',\r\n  initialState,\r\n  reducers: {\r\n    set: (state, action: PayloadAction<number>) => {\r\n      state.postId = action.payload;\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder.addCase(fetchPostDetails.pending, state => {\r\n      state.loading = true;\r\n      state.error = false;\r\n    });\r\n\r\n    builder.addCase(fetchPostDetails.rejected, state => {\r\n      state.error = true;\r\n      state.loading = false;\r\n    });\r\n\r\n    builder.addCase(\r\n      fetchPostDetails.fulfilled,\r\n      (state, action: PayloadAction<PostDetails>) => {\r\n        state.loading = false;\r\n        state.post = action.payload;\r\n      },\r\n    );\r\n\r\n    builder.addCase(\r\n      addComment.fulfilled,\r\n      (state, action: PayloadAction<CommentData>) => {\r\n        if (state.post && state.post.comments) {\r\n          state.post.comments.push(action.payload as Comment);\r\n        }\r\n      },\r\n    );\r\n\r\n    builder.addCase(\r\n      setLike.fulfilled,\r\n      (\r\n        state,\r\n        action: PayloadAction<{ postId: number; likes_count: number }>,\r\n      ) => {\r\n        if (state.post) {\r\n          state.post.likes_count = action.payload.likes_count;\r\n        }\r\n      },\r\n    );\r\n\r\n    builder.addCase(setLike.rejected, (state, action) => {\r\n      state.likeError = action.payload as string;\r\n    });\r\n  },\r\n});\r\n\r\nexport default postDetailsSlice.reducer;\r\nexport const { actions } = postDetailsSlice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}